.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_coloured_obs_values.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_coloured_obs_values.py:


Coloured observation values
============================



.. image:: /auto_examples/images/sphx_glr_coloured_obs_values_001.png
    :alt: coloured obs values
    :class: sphx-glr-single-img






.. code-block:: default


    import metview as mv

    # read BUFR data
    temp = mv.read("temp.bufr")

    # filter just the 500 hPa temperature from the obs data (Geopoints)
    gpt = mv.obsfilter(
        output="geopoints",
        parameter="airTemperature",
        level="single",
        first_level=500,
        data=temp,
    )

    # convert values to C units
    gpt = gpt - 273.16

    # define coloured value (as number) plotting
    sym = mv.msymb(
        legend="on",
        symbol_table_mode="advanced",
        symbol_format="(F3.1)",
        symbol_advanced_table_selection_type="interval",
        symbol_advanced_table_interval=1,
        symbol_advanced_table_max_level_colour="red",
        symbol_advanced_table_min_level_colour="lavender",
        symbol_advanced_table_colour_director="clockwise",
        symbol_advanced_table_text_font_size=0.6,
    )

    # shaded land and sea
    coast = mv.mcoast(
        map_coastline_land_shade="on",
        map_coastline_land_shade_colour="RGB(0.29,0.29,0.29)",
        map_coastline_sea_shade="on",
        map_coastline_sea_shade_colour="RGB(0.49,0.49,0.49)",
        map_coastline_colour="RGB(0.59,0.59,0.59)",
        map_grid_latitude_increment=10,
        map_grid_longitude_increment=20,
        map_grid_colour="RGB(0.25,0.25,0.25)",
    )

    # adjust the legend
    legend = mv.mlegend(legend_text_font_size=0.3)

    # define title
    title = mv.mtext(text_lines="Radiosonde - Temperature at 500 hPa", text_font_size=0.4)

    # set the view area
    view = mv.geoview(
        map_area_definition="corners", area=[7, -105, 35, -55], coastlines=coast
    )

    # define the output plot file
    mv.setoutput(mv.pdf_output(output_name="coloured_obs_values"))

    # plot the data with the style
    mv.plot(view, gpt, sym, legend, title)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.298 seconds)


.. _sphx_glr_download_auto_examples_coloured_obs_values.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: coloured_obs_values.py <coloured_obs_values.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: coloured_obs_values.ipynb <coloured_obs_values.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
