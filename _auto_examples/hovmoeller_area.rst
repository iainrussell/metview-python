.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_hovmoeller_area.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_hovmoeller_area.py:


Hovmoeller Area Average
==============================================



.. image:: /auto_examples/images/sphx_glr_hovmoeller_area_001.png
    :alt: hovmoeller area
    :class: sphx-glr-single-img






.. code-block:: default


    # (C) Copyright 2017- ECMWF.
    #
    # This software is licensed under the terms of the Apache Licence Version 2.0
    # which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
    #
    # In applying this licence, ECMWF does not waive the privileges and immunities
    # granted to it by virtue of its status as an intergovernmental organisation
    # nor does it submit to any jurisdiction.
    #

    # ----------------------------------------------------------------------
    # Description: Demonstrates how to use a Hovmoeller View to
    #              compute and plot an area average over time from GRIB data
    # ----------------------------------------------------------------------

    import metview as mv

    # read the GRIB data from file
    t_ts = mv.read("t_ts.grib")


    # set up the view to plot the data into
    # we will compute the average value along North/South lines over the
    # given area. We also supply a custom Time Axis definition in order
    # to increase the size of the date labels

    time_axis = mv.maxis(
        axis_type="date",
        axis_years_label_height=0.3,
        axis_months_label_height=0.3,
        axis_days_label_height=0.3,
    )

    hovmoeller_view = mv.mhovmoellerview(
        type="area_hovm",
        area=[53.4, -58.9, 67.2, 118.1],
        average_direction="north_south",
        time_axis=time_axis,
    )

    # set up the contouring style
    shade = mv.mcont(
        legend="on",
        contour="off",
        contour_level_count=8,
        contour_label="off",
        contour_shade="on",
        contour_shade_colour_method="list",
        contour_shade_method="area_fill",
        contour_shade_colour_list=[
            "blue",
            "sky",
            "blue_green",
            "grey",
            "cream",
            "yellowish_orange",
            "reddish_orange",
            "red",
        ],
    )


    # set up the title, just to make the font bigger
    title = mv.mtext(text_font_size=0.5)


    # define the output plot file
    mv.setoutput(mv.pdf_output(output_name="hovmoeller_area"))

    # plot the data into the Hovmoeller view with visdefs for styling
    mv.plot(hovmoeller_view, t_ts, shade, title)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.761 seconds)


.. _sphx_glr_download_auto_examples_hovmoeller_area.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: hovmoeller_area.py <hovmoeller_area.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: hovmoeller_area.ipynb <hovmoeller_area.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
